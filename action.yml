name: 'starling-bake-build'
description: 'performs the steps for a bake'
inputs: 
  bakefile:
    description: 'Bake file path'
    required: true
  target: 
    description: 'Build Target within bake file'
    required: true
  tag: 
    description: 'Release tag'
    required: true
  login:
    description: 'Perform Login to docker hub'
    required: false
    default: true
  dockerhub_username: 
    description: 'Dockerhub Username'
    required: true
  dockerhub_password: 
    description: 'Dockerhub Password'
    required: true
  build_arm64: 
    description: 'Set to true if building for arm64'
    required: false
    default: false
  latest_branch:
    description: 'Branch name for latest, otherwise branch name is used. Used to determine release name and caching'
    required: false
    default: master,main
  dev_branch:
    description: 'Branch name for development branch. Used to determine caching'
    required: false
    default: dev
  push:
    description: 'Push to docker hub'
    required: false
    default: true
  load:
    description: 'Load from local repository'
    required: false
    default: false
   
outputs: 
  release:
    description: 'Release name of the system'
    value: ${{ steps.release_tag_cache.outputs.release }}
  version:
    description: 'Version name of the system'
    value: ${{ steps.release_tag_cache.outputs.version }}

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    
    - name: Get Release tag and cache
      id: release_tag_cache
      shell: bash
      env:
        LATEST_BRANCHES: ${{ inputs.latest_branch }}
        DEV_BRANCHES: ${{ inputs.dev_branch }}
        TAG: ${{ inputs.tag }}
      run: $GITHUB_ACTION_PATH/release_tag_cache.sh

    # See https://github.com/actions/runner/issues/834#issuecomment-923177855
    - uses: ChristopherHX/conditional@b4a9649204f81002ec9a4ef7d4bf7d6b2ab7fa55
      with:
        if: ${{ inputs.build_arm64 == 'true' }}
        step: |
          name: Set up QEMU
          uses: docker/setup-qemu-action@v1
          with:
            platforms: arm64
    
    # See https://github.com/actions/runner/issues/834#issuecomment-923177855
    - uses: ChristopherHX/conditional@b4a9649204f81002ec9a4ef7d4bf7d6b2ab7fa55
      with:
        if: ${{ inputs.build_arm64 == 'false' }}
        step: |
          name: Set up QEMU
          uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      if: ${{ inputs.login == 'true' }}
      with:
        username: ${{ inputs.dockerhub_username }}
        password: ${{ inputs.dockerhub_password }}

    - name: If Build Local  ${{ inputs.target }}
      uses: docker/bake-action@master
      if: ${{ inputs.load == 'true' }}
      with:
        files: ${{ inputs.bakefile }}
        targets: ${{ inputs.target }}
        push: false
        load: true
        set: 
          - "target.platform=linux/arm64"
      env:
        BAKE_VERSION: ${{ steps.release_tag_cache.outputs.version }}
        BAKE_RELEASENAME: ${{ steps.release_tag_cache.outputs.release }}
        BAKE_CACHETO_NAME: ${{ steps.release_tag_cache.outputs.cacheto }}
        BAKE_CACHEFROM_NAME: ${{ steps.release_tag_cache.outputs.cachefrom }}

    - name: Build and push ${{ inputs.target }} if not local
      uses: docker/bake-action@master
      if: ${{ inputs.load == 'false' }}
      with:
        files: ${{ inputs.bakefile }}
        targets: ${{ inputs.target }}
        push: ${{ inputs.push }}
      env:
        BAKE_VERSION: ${{ steps.release_tag_cache.outputs.version }}
        BAKE_RELEASENAME: ${{ steps.release_tag_cache.outputs.release }}
        BAKE_CACHETO_NAME: ${{ steps.release_tag_cache.outputs.cacheto }}
        BAKE_CACHEFROM_NAME: ${{ steps.release_tag_cache.outputs.cachefrom }}
